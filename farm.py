#!/usr/bin/env python3

import asyncio

from farm.configurator import Configurator
from farm.farms import Farm

EXPLOITS = {}
EXPLOITS_DIR = "exploits"
EXPLOITS_TIMEOUT = 50


async def run_exploit(ips, exploit):
    while True:
        try:
            coroutines = [exploit.attack(ip) for ip in ips]
            completed, pending = await asyncio.wait(coroutines) # тут видимо надо бы понять, как по таймауту отваливаться
            for c in completed:
                log("exploit on ip %s done" % c) # надо бы понять, с какого ip делался запрос
            for c in pending:
                log("exploit on ip %s pending" % c)  # надо бы понять, с какого ip делался запрос
            result = [c.result for c in completed]
            # положить результат куда-нибудь
        except:
            pass
        finally:
            pass


def log(s):
    print(s)


def get_all_exploits():
    from os import listdir
    from os.path import isfile, join, isdir, splitext
    if not isdir(EXPLOITS_DIR):
        log("exploits/ not a dir")
        return

    files = [file for file in listdir(EXPLOITS_DIR) if isfile(join(EXPLOITS_DIR, file))]
    for file in files:
        module, ext = splitext(file)

        if ext != ".py" or module in EXPLOITS:
            continue

        log("find module %s" % module)
        exec("from %s import %s" % (EXPLOITS_DIR, module))
        exec("EXPLOITS['%s'] = %s.Exploit()" % (module, module))
        log("module %s successfully imported" % module)
    log(EXPLOITS)


if __name__ == '__main__':
    # f = Farm(
    #     [Team('Sasha', '555')] * 100,
    #     [QuickExploit()] * 10,
    #     HackerdomFlagSubmitter('127.0.0.1', ''),
    #     DirectoryFlagStorage('flags'),
    #     settings.FLAG_FORMAT
    # )
    f = Farm.create_from_configurator(Configurator())
    f.run()
