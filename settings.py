from farm.utils import read_teams_from_file

# Specify regular expression for valid flags
FLAG_FORMAT = r'[A-Z0-9]{31}='

# Flag submitter for some checksystem
FLAG_SUBMITTER = {
    # HackerdomFlagSubmitter is submitter for Hackerdom's CTFs such as RuCTF or RuCTFE
    'type': 'backends.hackerdom_flag_submitter.HackerdomFlagSubmitter',
    'kwargs': {
        'host': '<checksystem-address>',
        'team_token': '<team-token>',
    }
}

# Teams list
# List of pairs (Team name, Vulnbox address).
# Teams list can be retrieved from csv file via `utils.read_teams_from_file('teams.csv')`
TEAMS = read_teams_from_file('teams.csv')

#
# All following settings are okay to use by default. Change it if you fully understand what they mean
#

# Flag storage: remember all found flags, allow to don't resend them
FLAG_STORAGE = 'farm.storage.DirectoryFlagStorage'

# Exploit storage
EXPLOIT_STORAGE = {
    # DirectoryExploitStorage read all exploits from directory (exploits/) before round starts.
    # Just put file with exploit into this directory and farm will see it. No need to restart farm for each new exploit.
    'type': 'farm.exploit_storage.DirectoryExploitStorage',
    'kwargs': {
        'directory': 'exploits',
    }
}

# Round is step for running all exploits to all teams.
# You can think about round timeout as a timeout for each exploit.
# Round timeout is specified in seconds. Default value is 60

# ROUND_TIMEOUT = 60

# Sleep interval between two flag submitter's tries. In seconds. Default value is 5

# SUBMITTER_SLEEP = 5
