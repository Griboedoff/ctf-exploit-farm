#!/usr/bin/env python3

import re
import aiohttp

from farm.exploits import AbstractExploit


class HttpExploit(AbstractExploit):
    async def attack(self, hostname):
        # cookie_jar=aiohttp.CookieJar(unsafe=True) is needed to correct working on IP (not domain) hostnames
        async with aiohttp.ClientSession(cookie_jar=aiohttp.CookieJar(unsafe=True)) as session:
            async with session.get('https://en.wikipedia.org/wiki/Dog') as resp:
                self.logger.info('HTTP status is %d' % resp.status)
                text = await resp.text()

                count = re.findall(r'dog', text)
                self.logger.info('Dog exploit: found %d words "dog"' % len(count))

        return 'Test data U2M3QHS8VCH73R13ALX6R52LCO3E0UJ= flags-flags-flags GUDOITWYX4NSIM88KC23AQRWYDF2MPI='


if __name__ == '__main__':
    from farm.farms import Farm
    Farm.debug_exploit(HttpExploit(), '127.0.0.1')
