import logging
import os
import os.path


class Logger:
    LOGS_DIRECTORY = 'logs'

    def __init__(self, name):
        self._ensure_logs_directory_exists()

        self._logger = logging.getLogger(name)
        self._logger.setLevel(logging.DEBUG)

        stream_handler = logging.StreamHandler()
        stream_handler.setFormatter(logging.Formatter('{%(thread)d} [%(levelname)s] %(message)s'))
        self._logger.addHandler(stream_handler)

        file_handler = logging.FileHandler(os.path.join(self.LOGS_DIRECTORY, name + '.log'))
        file_handler.setFormatter(logging.Formatter('%(asctime)s {%(thread)d} [%(levelname)s] %(message)s'))
        self._logger.addHandler(file_handler)

    def debug(self, message):
        self._logger.debug(message)

    def info(self, message):
        self._logger.info(message)

    def warning(self, message):
        self._logger.warning(message)

    def error(self, message):
        self._logger.error(message)

    def _ensure_logs_directory_exists(self):
        if not os.path.exists(self.LOGS_DIRECTORY):
            os.makedirs(self.LOGS_DIRECTORY)

        if os.path.isfile(self.LOGS_DIRECTORY):
            raise ValueError(f'Can not write logs into directory {self.LOGS_DIRECTORY}, because it\'s file')