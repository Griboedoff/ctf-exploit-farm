class AbstractExploit:
    _subclasses = []

    async def attack(self, hostname):
        raise NotImplementedError('Can\'t attack host %s: %s doesn\'t specify attack(hostname)' % (hostname, self.__class__.__name__))

    def __init_subclass__(cls, **kwargs):
        AbstractExploit._subclasses.append(cls)

    @classmethod
    def get_all_subclasses(cls):
        return cls._subclasses
